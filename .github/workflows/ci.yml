name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

  analyzers:
    name: Analyzers (fail on warnings)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'
      - name: Restore
        run: dotnet restore
      - name: Run analyzers and fail on warnings
        run: dotnet build --configuration Release /p:TreatWarningsAsErrors=true --no-restore

  windows-tests:
    runs-on: windows-latest
    needs: [build, analyzers]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Run tests and collect coverage
        run: |
          dotnet test tests\Fast.UndoRedo.Core.Tests\Fast.UndoRedo.Core.Tests.csproj --configuration Release --no-build --logger "trx;LogFileName=test-results.trx" --results-directory ./TestResults --collect:"XPlat Code Coverage"
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: |
            **/coverage.cobertura.xml
            **/coverage.opencover.xml
            **/coverage.json
      - name: Show .NET info
        run: dotnet --info

  codecov:
    needs: windows-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-results
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: |
            **/coverage.cobertura.xml
            **/coverage.opencover.xml
            **/coverage.json
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  nuget-publish:
    needs: windows-tests
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Pack NuGet
        run: dotnet pack src/Fast.UndoRedo.Core/Fast.UndoRedo.Core.csproj --configuration Release --output ./nupkgs
      - name: Publish NuGet
        run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
